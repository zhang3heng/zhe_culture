(function(){var g,c,e,b,d,a,f=this;c=require("../lib/charset").preferredCharsets;this["Should not return a charset when no charset is provided"]=function(h){h.deepEqual(c("*",[]),[]);return h.done()};this["Should not return a charset when no charset is acceptable"]=function(h){h.deepEqual(c("ISO-8859-1",["utf-8"]),[]);return h.done()};this["Should not return a charset with q = 0"]=function(h){h.deepEqual(c("utf-8;q=0",["utf-8"]),[]);return h.done()};b=function(h){return f["Should return "+h.selected+" for accept-charset header "+h.accept+" with provided charset "+h.provided]=function(i){i.deepEqual(c(h.accept,h.provided),h.selected);return i.done()}};e=[{accept:"utf-8",provided:["utf-8"],selected:["utf-8"]},{accept:"*",provided:["utf-8"],selected:["utf-8"]},{accept:"utf-8",provided:["utf-8","ISO-8859-1"],selected:["utf-8"]},{accept:"utf-8, ISO-8859-1",provided:["utf-8"],selected:["utf-8"]},{accept:"utf-8;q=0.8, ISO-8859-1",provided:["utf-8","ISO-8859-1"],selected:["ISO-8859-1","utf-8"]},{accept:"utf-8;q=0.8, ISO-8859-1",provided:null,selected:["ISO-8859-1","utf-8"]}];for(d=0,a=e.length;d<a;d++){g=e[d];b(g)}}).call(this);