module.exports=preferredEncodings;preferredEncodings.preferredEncodings=preferredEncodings;function parseAcceptEncoding(c){var d;if(c){d=c.split(",").map(function(g){return parseEncoding(g.trim())})}else{d=[]}if(!d.some(function(g){return g&&specify("identity",g)})){var a=1;for(var b=0;b<d.length;b++){var f=d[b];if(f&&f.q<a){a=f.q}}d.push({encoding:"identity",q:a/2,})}return d.filter(function(g){return g})}function parseEncoding(c){var a=c.match(/^\s*(\S+?)\s*(?:;(.*))?$/);if(!a){return null}var d=a[1];var e=1;if(a[2]){var g=a[2].split(";");for(var b=0;b<g.length;b++){var f=g[b].trim().split("=");if(f[0]==="q"){e=parseFloat(f[1]);break}}}return{encoding:d,q:e}}function getEncodingPriority(a,b){return(b.map(function(c){return specify(a,c)}).filter(function(c){return c}).sort(function(d,c){return d.s>c.s?-1:1})[0]||{q:0}).q}function specify(c,a){var b=0;if(a.encoding===c){b|=1}else{if(a.encoding!=="*"){return null}}return{s:b,q:a.q,}}function preferredEncodings(b,a){b=parseAcceptEncoding(b||"");if(a){return a.map(function(c){return[c,getEncodingPriority(c,b)]}).filter(function(c){return c[1]>0}).sort(function(d,c){return d[1]===c[1]?0:d[1]>c[1]?-1:1}).map(function(c){return c[0]})}else{return b.sort(function(d,c){return d.q<c.q?1:-1}).filter(function(c){return c.q>0}).map(function(c){return c.encoding})}};