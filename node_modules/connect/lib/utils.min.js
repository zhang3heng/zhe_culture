/*
 * Connect - utils
 * Copyright(c) 2010 Sencha Inc.
 * Copyright(c) 2011 TJ Holowaychuk
 * MIT Licensed
 */
var http=require("http"),crypto=require("crypto"),parse=require("url").parse,sep=require("path").sep,signature=require("cookie-signature"),nodeVersion=process.versions.node.split(".");exports.brokenPause=parseInt(nodeVersion[0],10)===0&&parseInt(nodeVersion[1],10)<10;exports.hasBody=function(c){var b="transfer-encoding" in c.headers;var a="content-length" in c.headers&&c.headers["content-length"]!=="0";return b||a};exports.mime=function(b){var c=b.headers["content-type"]||"",a=c.indexOf(";");return ~a?c.slice(0,a):c};exports.error=function(b,c){var a=new Error(c||http.STATUS_CODES[b]);a.status=b;return a};exports.md5=function(b,a){return crypto.createHash("md5").update(b,"utf8").digest(a||"hex")};exports.merge=function(d,c){if(d&&c){for(var e in c){d[e]=c[e]}}return d};exports.escape=function(a){return String(a).replace(/&(?!\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")};exports.sign=function(b,a){console.warn("do not use utils.sign(), use https://github.com/visionmedia/node-cookie-signature");return b+"."+crypto.createHmac("sha256",a).update(b).digest("base64").replace(/=+$/,"")};exports.unsign=function(c,a){console.warn("do not use utils.unsign(), use https://github.com/visionmedia/node-cookie-signature");var b=c.slice(0,c.lastIndexOf("."));return exports.sign(b,a)==c?b:false};exports.parseSignedCookies=function(c,a){var b={};Object.keys(c).forEach(function(d){var e=c[d];if(0==e.indexOf("s:")){e=signature.unsign(e.slice(2),a);if(e){b[d]=e;delete c[d]}}});return b};exports.parseSignedCookie=function(b,a){return 0==b.indexOf("s:")?signature.unsign(b.slice(2),a):b};exports.parseJSONCookies=function(a){Object.keys(a).forEach(function(c){var d=a[c];var b=exports.parseJSONCookie(d);if(b){a[c]=b}});return a};exports.parseJSONCookie=function(b){if(0==b.indexOf("j:")){try{return JSON.parse(b.slice(2))}catch(a){}}};exports.pause=exports.brokenPause?require("pause"):function(){return{end:noop,resume:noop}};exports.removeContentHeaders=function(a){if(!a._headers){return}Object.keys(a._headers).forEach(function(b){if(0==b.indexOf("content")){a.removeHeader(b)}})};exports.conditionalGET=function(a){return a.headers["if-modified-since"]||a.headers["if-none-match"]};exports.unauthorized=function(b,a){b.statusCode=401;b.setHeader("WWW-Authenticate",'Basic realm="'+a+'"');b.end("Unauthorized")};exports.notModified=function(a){exports.removeContentHeaders(a);a.statusCode=304;a.end()};exports.etag=function(a){return'"'+a.size+"-"+Number(a.mtime)+'"'};exports.parseCacheControl=function(h){var f=h.split(","),e={};for(var c=0,a=f.length;c<a;c++){var d=f[c].split("="),b=d.shift().trim(),g=parseInt(d.shift(),10);e[b]=isNaN(g)?true:g}return e};exports.parseUrl=function(b){var a=b._parsedUrl;if(a&&a.href==b.url){return a}else{a=parse(b.url);if(a.auth&&!a.protocol&&~a.href.indexOf("//")){a=parse(b.url.replace(/@/g,"%40"))}return b._parsedUrl=a}};exports.parseBytes=require("bytes");exports.normalizeSlashes=function normalizeSlashes(a){return a.split(sep).join("/")};function noop(){};